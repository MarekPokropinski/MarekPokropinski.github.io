{"version":3,"sources":["Sudoku.js","solve.js","App.js","reportWebVitals.js","index.js"],"names":["Sudoku","sudoku","setCell","width","height","selectedCell","setup","p5","canvasParentRef","createCanvas","parent","draw","background","fill","x","y","rect","i","strokeWeight","line","textSize","j","val","text","mouseClicked","Math","floor","mouseX","mouseY","keyTyped","keyCode","isValid","j2","i2","x_offset","y_offset","solve_sudoku","solutions","solve","isSolved","copy","map","push","console","log","App","useState","setSudoku","className","value","onClick","length","handleSolve","cleared","handleClear","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1e5fcb50.chunk.js","sourcesContent":["import Sketch from \"react-p5\";\r\n\r\nfunction Sudoku({ sudoku, setCell }) {\r\n  const [width, height] = [500, 500];\r\n  let selectedCell = null;\r\n\r\n  const setup = (p5, canvasParentRef) => {\r\n    p5.createCanvas(width, height).parent(canvasParentRef);\r\n  };\r\n\r\n  const draw = (p5) => {\r\n    p5.background(255);\r\n\r\n    if (selectedCell !== null) {\r\n      p5.fill(150, 150, 255)\r\n\r\n      const x = selectedCell[0] * width / 9\r\n      const y = selectedCell[1] * height / 9\r\n\r\n      p5.rect(y, x, width / 9, height / 9);\r\n    }\r\n\r\n    // Draw lines\r\n    p5.fill(0)\r\n    for (let i = 0; i <= 9; i++) {\r\n      const x = (width - 3) / 9 * i + 1.5;\r\n      if (i % 3 === 0) {\r\n        p5.strokeWeight(3);\r\n      } else {\r\n        p5.strokeWeight(1);\r\n      }\r\n\r\n      p5.line(0, x, width, x)\r\n      p5.line(x, 0, x, height)\r\n    }\r\n\r\n    p5.textSize(32)\r\n    p5.strokeWeight(1);\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        const val = sudoku[j][i];\r\n        if (val !== 0) {\r\n          p5.text(val, (i + 0.4) * width / 9, (j + 0.7) * height / 9);\r\n        }\r\n      }\r\n    }\r\n\r\n  };\r\n\r\n  const mouseClicked = p5 => {\r\n    const x = Math.floor(p5.mouseX / width * 9)\r\n    const y = Math.floor(p5.mouseY / height * 9)\r\n\r\n    selectedCell = [y, x];\r\n  }\r\n\r\n  const keyTyped = p5 => {\r\n    if (selectedCell === null) {\r\n      return;\r\n    }\r\n    if (p5.keyCode >= 48 && p5.keyCode <= 57) {\r\n      setCell(...selectedCell, p5.keyCode - 48);\r\n    } else if (p5.keyCode >= 96 && p5.keyCode <= 105) {\r\n      setCell(...selectedCell, p5.keyCode - 96);\r\n    }\r\n  }\r\n\r\n  return <\r\n    Sketch\r\n    setup={setup}\r\n    draw={draw}\r\n    mouseClicked={mouseClicked}\r\n    keyTyped={keyTyped}\r\n  />;\r\n}\r\n\r\nexport default Sudoku;","function isValid(sudoku, i, j, val) {\r\n  for (let j2 = 0; j2 < 9; j2++) {\r\n    if (sudoku[i][j2] === val)\r\n      return false;\r\n  }\r\n  for (let i2 = 0; i2 < 9; i2++) {\r\n    if (sudoku[i2][j] === val)\r\n      return false;\r\n  }\r\n  const x = Math.floor(i / 3) * 3;\r\n  const y = Math.floor(j / 3) * 3;\r\n\r\n  for (let x_offset = 0; x_offset < 3; x_offset++) {\r\n    for (let y_offset = 0; y_offset < 3; y_offset++) {\r\n      if (sudoku[x + x_offset][y + y_offset] === val)\r\n        return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nfunction solve_sudoku(sudoku) {\r\n  const solutions = [];\r\n  const solve = sudoku => {\r\n    let isSolved = true;\r\n    for (let i = 0; i < 9; i++) {\r\n      for (let j = 0; j < 9; j++) {\r\n        if (sudoku[i][j] === 0) {\r\n          isSolved = false;\r\n          for (let val = 1; val <= 9; val++) {\r\n            if (isValid(sudoku, i, j, val)) {\r\n              sudoku[i][j] = val;\r\n              solve(sudoku);\r\n              sudoku[i][j] = 0;\r\n            }\r\n          }\r\n          return;\r\n        }\r\n      }\r\n    }\r\n    if (isSolved) {\r\n      const copy = sudoku.map(x => [...x]);\r\n      solutions.push(copy);\r\n    }\r\n  };\r\n  solve(sudoku);\r\n  console.log(solutions);\r\n  return solutions;\r\n}\r\nexport default solve_sudoku;","import './App.css';\nimport Sudoku from './Sudoku';\nimport solve_sudoku from './solve';\nimport { useState } from 'react';\n\nfunction App() {\n  const [sudoku, setSudoku] = useState([\n    [0, 0, 4, 3, 0, 0, 0, 0, 1],\n    [0, 0, 7, 0, 9, 1, 2, 4, 0],\n    [1, 9, 0, 0, 4, 0, 8, 0, 0],\n    [7, 0, 9, 2, 0, 0, 5, 0, 6],\n    [0, 0, 2, 0, 5, 0, 0, 3, 0],\n    [0, 0, 0, 0, 7, 6, 9, 1, 2],\n    [4, 0, 5, 0, 8, 0, 0, 0, 0],\n    [2, 7, 0, 0, 0, 0, 1, 5, 8],\n    [0, 0, 0, 6, 2, 5, 3, 7, 0]\n  ])\n\n  const setCell = (x, y, value) => {\n    sudoku[x][y] = value;\n    setSudoku(sudoku);\n  }\n\n  const handleSolve = () => {\n    const solutions = solve_sudoku(sudoku);\n    if (solutions.length==0) {\n      console.log('No solutions');\n      return;\n    }\n    if (solutions.length>1) {\n      console.log('Many solutions');\n    }\n    setSudoku(solve_sudoku(sudoku)[0])\n  };\n\n  const handleClear = () => {\n    const cleared = sudoku.map(x=>x.map(y=>0));\n    setSudoku(cleared);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Sudoku solver</h1>\n      <Sudoku sudoku={sudoku} setCell={setCell} />\n      <button onClick={() => handleSolve()}>solve</button>\n      <button onClick={() => handleClear()}>clear</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}